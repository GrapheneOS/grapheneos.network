# nginx 1.22.x

worker_processes auto;
worker_rlimit_nofile 16384;

events {
    worker_connections 4096;
}

http {
    include mime.types;
    default_type application/octet-stream;

    charset utf-8;

    sendfile on;
    sendfile_max_chunk 512k;
    tcp_nopush on;
    keepalive_requests 256;
    keepalive_timeout 3m;
    server_tokens off;
    msie_padding off;

    client_max_body_size 1k;
    client_body_buffer_size 1k;
    client_header_buffer_size 1k;
    large_client_header_buffers 2 1k;
    http2_recv_buffer_size 128k;
    http2_chunk_size 4k;

    client_body_timeout 30s;
    client_header_timeout 30s;
    send_timeout 30s;
    max_ranges 0;

    resolver [::1];
    resolver_timeout 5s;

    proxy_connect_timeout 5s;
    proxy_read_timeout 15s;
    proxy_send_timeout 15s;

    proxy_http_version 1.1;

    proxy_ssl_protocols TLSv1.3;
    proxy_ssl_server_name on;
    proxy_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;
    proxy_ssl_verify on;

    proxy_cache_path /var/cache/nginx/google.psds.grapheneos.org use_temp_path=off keys_zone=google.psds.grapheneos.org:1m inactive=1h max_size=10m;

    http2_max_concurrent_streams 16;
    limit_conn_status 429;
    limit_conn_zone $binary_remote_addr zone=addr-limit:10m;
    limit_conn addr-limit 128;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256;
    ssl_prefer_server_ciphers on;
    ssl_conf_command Options PrioritizeChaCha;

    ssl_certificate /etc/letsencrypt/live/grapheneos.network/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/grapheneos.network/privkey.pem;

    # maintained by nginx-rotate-session-ticket-keys in ramfs
    ssl_session_ticket_key session-ticket-keys/4.key;
    ssl_session_ticket_key session-ticket-keys/3.key;
    ssl_session_ticket_key session-ticket-keys/2.key;
    ssl_session_ticket_key session-ticket-keys/1.key;
    ssl_session_timeout 1d;
    ssl_buffer_size 4k;

    ssl_trusted_certificate /etc/letsencrypt/live/grapheneos.network/chain.pem;
    ssl_stapling on;
    ssl_stapling_verify on;
    # maintained by certbot-ocsp-fetcher
    ssl_stapling_file ocsp-cache/grapheneos.network.der;

    log_format main '$remote_addr - $remote_user [$time_local] '
                    '"$request_method $scheme://$host$request_uri $server_protocol" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent"';
    access_log syslog:server=unix:/dev/log,nohostname main;
    error_log syslog:server=unix:/dev/log,nohostname;
    log_not_found off;

    if_modified_since before;

    aio threads;
    aio_write on;

    server {
        listen 80 backlog=4096;
        listen [::]:80 backlog=4096;
        server_name grapheneos.network connectivitycheck.grapheneos.network grapheneos.online connectivitycheck.grapheneos.online connectivitycheck.grapheneos.org connectivity.grapheneos.org;

        root /var/empty;

        location = /generate_204 {
            add_header X-Robots-Tag "none" always;
            return 204;
        }

        location = /gen_204 {
            add_header X-Robots-Tag "none" always;
            return 204;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 80;
        listen [::]:80;
        server_name www.grapheneos.network www.grapheneos.online time.grapheneos.org;

        root /var/empty;

        # use $host to set up HSTS for redirect domains
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name 0.grapheneos.network;

        root /var/empty;

        location /.well-known/acme-challenge/ {
            root /srv/certbot;
        }

        location / {
            return 301 https://grapheneos.network$request_uri;
        }
    }

    server {
        listen 443 ssl http2 backlog=4096;
        listen [::]:443 ssl http2 backlog=4096;
        server_name grapheneos.network connectivitycheck.grapheneos.network grapheneos.online connectivitycheck.grapheneos.online connectivitycheck.grapheneos.org connectivity.grapheneos.org;

        root /var/empty;

        location = /generate_204 {
            add_header X-Robots-Tag "none" always;
            return 204;
        }

        location = /gen_204 {
            add_header X-Robots-Tag "none" always;
            return 204;
        }

        location = / {
            return 301 https://grapheneos.org/faq#default-connections;
        }

        location /.well-known/acme-challenge/ {
            return 301 https://0.grapheneos.network$request_uri;
        }

        location / {
            return 404;
        }
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name time.grapheneos.org;

        root /var/empty;

        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

        location = / {
            return 301 https://grapheneos.org/faq#default-connections;
        }

        location = /generate_204 {
            add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
            add_header X-Robots-Tag "none" always;
            return 204;
        }

        location /.well-known/acme-challenge/ {
            return 301 https://0.grapheneos.network$request_uri;
        }

        location / {
            return 404;
        }
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name remoteprovisioning.grapheneos.org;

        root /var/empty;

        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        add_header X-Robots-Tag "none" always;

        location /.well-known/acme-challenge/ {
            return 301 https://0.grapheneos.network$request_uri;
        }

        location / {
            if ($request_method != POST) {
                return 405;
            }
            set $target https://remoteprovisioning.googleapis.com;
            proxy_pass $target;

            client_max_body_size 16k;
            client_body_buffer_size 16k;

            proxy_hide_header Alt-Svc;

            proxy_hide_header Strict-Transport-Security;
            proxy_hide_header X-Robots-Tag;

            proxy_ignore_headers Set-Cookie;
            proxy_hide_header Set-Cookie;
        }
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name google.psds.grapheneos.org;

        root /var/empty;

        proxy_hide_header Alt-Svc;

        proxy_hide_header X-GUploader-UploadID;
        proxy_hide_header x-goog-generation;
        proxy_hide_header x-goog-metageneration;
        proxy_hide_header x-goog-stored-content-encoding;
        proxy_hide_header x-goog-stored-content-length;
        proxy_hide_header x-goog-meta-last-modified;
        proxy_hide_header x-goog-meta-etag;
        proxy_hide_header x-goog-hash;
        proxy_hide_header x-goog-storage-class;

        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        add_header X-Robots-Tag "none" always;

        proxy_hide_header Strict-Transport-Security;
        proxy_hide_header X-Robots-Tag;

        proxy_ignore_headers Set-Cookie;
        proxy_hide_header Set-Cookie;

        proxy_hide_header Age; # not accurate due to our caching

        proxy_cache google.psds.grapheneos.org;
        proxy_cache_key $uri; # ignore query string
        proxy_cache_lock on;
        proxy_cache_lock_timeout 60s;
        proxy_cache_revalidate on;
        # data is valid for around 7 days so serving slightly stale content is fine
        proxy_cache_use_stale updating;
        proxy_cache_background_update on;

        proxy_max_temp_file_size 8m;

        location = /lto2.dat {
            if ($request_method != GET) {
                return 405;
            }
            set $target https://agnss.goog;
            proxy_pass $target;
        }

        location = /rto.dat {
            if ($request_method != GET) {
                return 405;
            }
            set $target https://agnss.goog;
            proxy_pass $target;
        }

        location = /rtistatus.dat {
            if ($request_method != GET) {
                return 405;
            }
            set $target https://agnss.goog;
            proxy_pass $target;
        }

        location /.well-known/acme-challenge/ {
            return 301 https://0.grapheneos.network$request_uri;
        }

        location / {
            return 404;
        }
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name www.grapheneos.network www.grapheneos.online;

        root /var/empty;

        return 301 https://grapheneos.network$request_uri;
    }

    server {
        listen 80;
        listen [::]:80;
        server_name mta-sts.grapheneos.network mta-sts.grapheneos.online;

        root /var/empty;

        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name mta-sts.grapheneos.network mta-sts.grapheneos.online;

        root /srv/mta-sts;

        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

        location = / {
            return 301 https://grapheneos.org/articles/grapheneos-servers;
        }

        location = /.well-known/mta-sts.txt {}

        location /.well-known/acme-challenge/ {
            return 301 https://0.grapheneos.network$request_uri;
        }

        location / {
            return 404;
        }
    }

    server {
        listen unix:/run/nginx/status.sock;

        root /var/empty;

        location = /nginx_status {
            stub_status;
            access_log off;
        }

        location / {
            return 404;
        }
    }
}
